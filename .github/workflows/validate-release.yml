name: Validate release

on:
  workflow_call:
    inputs:
      ref:
        description: |
          The ref that is released
        required: true
        type: string
    secrets:
      release-engineering-token:
        required: true

  pull_request:
    branches:
      - "rc/*"

permissions:
  contents: read
  actions: write
  checks: write

jobs:

  determine-ref:
    runs-on: ubuntu-latest
    outputs:
      release-ref: ${{ steps.set-ref.outputs.release-ref }}
    env:
      REF_FROM_INPUT: ${{ inputs.ref }}
      REF_FROM_PR: ${{ github.base_ref }}
      EVENT_NAME: ${{ github.event_name }}
    steps:
      - id: set-ref
        run: |
          if [[ "$EVENT_NAME" == "workflow_dispatch" ]]; then
            echo "release-ref=$REF_FROM_INPUT" >> "$GITHUB_OUTPUT"
          else 
            if [[ "$EVENT_NAME" == "pull_request" ]]; then
              echo "release-ref=$REF_FROM_PR" >> "$GITHUB_OUTPUT"
            else
              echo "Unexpected event name $EVENT_NAME!"
              exit 1
            fi
          fi
  
  validate-coding-standards:
    name: "Validate coding standards"
    uses: ./.github/workflows/validate-coding-standards.yml

  init-release-performance:
    outputs:
      check-run-id: ${{ steps.create-check-run.outputs.check-run-id }}}
    runs-on: ubuntu-latest
    steps:
      - name: Create check run
        id: create-check-run
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # For debugging purposes
          echo https://api.github.com/repos/$GITHUB_REPOSITORY/check-runs
          env

          check_run_id=$(gh api \
          --header "Accept: application/vnd.github+json" \
          --header "X-GitHub-Api-Version: 2022-11-28" \
          --field name="performance-test" \
          --field head_sha="$GITHUB_SHA" \
          --jq ".id" \
          /repos/$GITHUB_REPOSITORY/check-runs)

          echo "check-run-id=$check_run_id" >> "$GITHUB_OUTPUT"

  validate-release-performance:
    needs: [init-release-performance, determine-ref]
    runs-on: ubuntu-latest
    steps:    
      - name: Invoke performance test
        env:
          RELEASE_REF: ${{ needs.determine-ref.outputs.release-ref }}
          CHECK_RUN_ID: ${{ needs.init-release-performance.outputs.check-run-id }}
          GH_TOKEN: ${{ secrets.release-engineering-token }}
        run: |
          jq -n \
          --arg ref "$RELEASE_REF" \
          --arg check_run_id "$CHECK_RUN_ID" \
          '{ref: $ref, check-run-id: $check_run_id}' \
          | \
          gh workflow run release-performance-testing.yml \
          --json \
          -R github/codeql-coding-standards-release-engineering \
          --ref rvermeulen/release-process

  on-failure-validate-release-performance:
    needs: [init-release-performance, validate-release-performance]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Fail check run status
        env:
           CHECK_RUN_ID: ${{ needs.init-release-performance.outputs.check-run-id }}
        run: |
          echo "{\"status\": \"completed\", \"conclusion\": \"failed\"}" | gh api \
            --method PATCH \
            --header "Accept: application/vnd.github+json" \
            --header "X-GitHub-Api-Version: 2022-11-28" \
            --input - \
            /repos/$GITHUB_REPOSITORY/check-runs/$CHECK_RUN_ID